# This template uses an existing image to create or update an Azure Virtual Machine Scale Set

parameters:
  - name: azure_service_connection_name
    type: string

  - name: agent_pool
    type: object
    default:
      name: ubuntu-latest

  - name: vmss_name
    type: string

  - name: image_ref
    type: string

  - name: image_type
    type: string

  - name: variable_group_name
    type: string
    default: 'Image Generation Variables'

  - name: repository_ref
    type: string
    default: 'self'

  - name: delete_old_images
    type: boolean
    default: true

jobs:
- job: 
  pool: ${{ parameters.agent_pool }}
  variables:
  - group: ${{ parameters.variable_group_name }}

  steps:
  - checkout: ${{ parameters.repository_ref }}
    fetchDepth: 0
    fetchTags: false

  - task: AzureCLI@2
    displayName: update vmss
    inputs:
      azureSubscription: ${{ parameters.azure_service_connection_name }}
      scriptType: 'pscore'
      failOnStandardError: true
      scriptLocation: scriptPath
      scriptPath: ./images.CI/linux-and-win/update-vmss.ps1
      arguments: >
        -VmssName ${{ parameters.vmss_name }}
        -ResourceGroupName $(azure_resource_group)
        -Image ${{ parameters.image_ref }}
        -ImageType ${{ parameters.image_type }}

  - ${{ if parameters.delete_old_images }}:
    - task: AzureCLI@2
      displayName: delete old vm images
      inputs:
        azureSubscription: ${{ parameters.azure_service_connection_name }}
        scriptType: 'pscore'
        scriptLocation: inlineScript
        inlineScript: |
          $imageName = "${{ parameters.image_type }}-$(Build.BuildId)"

          Write-Host "Latest image: $imageName"
          Write-Host "Retrieve old images ..."

          $list = (az image list --resource-group $(azure_resource_group) `
            --query "[?starts_with(name, '${{ parameters.image_type }}') && name != '$imageName'].{id:id}" -o tsv)
          
          if ($list) {
            Write-Host "Images to delete: "
            $list

            Write-Host "Removing old images ..."

            $list = $list -join " "
            az image delete --ids $list | Out-Null
          }
